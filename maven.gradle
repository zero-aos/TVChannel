apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'maven-publish'
//apply plugin: 'signing'
//apply plugin: 'maven'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

group = project.rootProject.GROUP
version = project.rootProject.VERSION
//javadocJar sourcesJar
//clean build install bintrayUpload

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                name POM_NAME
                artifactId POM_ARTIFACT_ID
                packaging POM_PACKAGING

                description POM_DESCRIPTION
                url POM_URL

                scm {
                    connection POM_SCM_URL
                    developerConnection POM_SCM_URL
                    url POM_SCM_URL
                }

                licenses { //set your license
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }
                developers {
                    developer { //developer info
                        id 'tenvine'
                        name 'vine'
                        email 'zerowolfhwang@gmail.com'
                    }
                }
            }
        }
    }

    repositories.mavenDeployer {
        repository(url: 'file:///Users/zerowolfhwang/.m2/repository')
    }

//    repositories.mavenDeployer {
//        repository(url: properties.getProperty("rdm_url")) {
//            authentication(userName: properties.getProperty("userName"), password: properties.getProperty("password"))
//            pom.groupId = GROUP
//            pom.artifactId = POM_ARTIFACT_ID
//            pom.version = VERSION
//        }
//    }
}

bintray { //BintrayExtension
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg { //PackageConfig
        repo = "maven"  //publish to maven warehouse
        //userOrg "litao"
        name = "${GROUP}:${POM_ARTIFACT_ID}"
        licenses = BINTRAY_LICENCE
        vcsUrl = POM_SCM_URL
        websiteUrl = POM_URL
        issueTrackerUrl = POM_ISSUE_URL
        publicDownloadNumbers = true
        publish = true
        dryRun = false
    }
}

//添加生成任务
//task sourcesJar(type: Jar) {
//    from sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    options { // 设置编码，否则中文可能会提示出错 , java doc采用utf-8编码否则会报“GBK的不可映射字符”错误
//        encoding "UTF-8"
//        charSet 'UTF-8'
//    }
//    source = sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//javadoc { //java doc采用utf-8编码否则会报“GBK的不可映射字符”错误
//    options {
//        encoding "UTF-8"
//        charSet 'UTF-8'
//    }
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//task javadoc(type: Javadoc) {
//    options.encoding = "UTF-8" // 设置编码，否则中文可能会提示出错
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
